[1mdiff --git a/STRIPE_SETUP.md b/STRIPE_SETUP.md[m
[1mindex 1e87618b..de1ed159 100644[m
[1m--- a/STRIPE_SETUP.md[m
[1m+++ b/STRIPE_SETUP.md[m
[36m@@ -40,7 +40,7 @@[m [mAs seguintes chaves j√° est√£o configuradas no projeto:[m
 1. No Stripe Dashboard, v√° para **Developers** ‚Üí **Webhooks**[m
 2. Clique em **Add endpoint**[m
 3. Configure o endpoint:[m
[31m-   - **Endpoint URL**: `https://vmetrics.com.br/api/webhooks/stripe` (produ√ß√£o)[m
[32m+[m[32m   - **Endpoint URL**: `http://localhost:3001/api/webhooks/stripe` (desenvolvimento)[m
    - **Events to send**: Selecione os eventos necess√°rios:[m
      - `checkout.session.completed`[m
      - `customer.subscription.created`[m
[36m@@ -70,7 +70,7 @@[m [mPara desenvolvimento local, use o Stripe CLI:[m
 stripe login[m
 [m
 # Testar webhooks localmente[m
[31m-stripe listen --forward-to localhost:3000/api/webhooks/stripe[m
[32m+[m[32mstripe listen --forward-to localhost:3001/api/webhooks/stripe[m
 ```[m
 [m
 ## üß™ Testando a Integra√ß√£o[m
[36m@@ -82,30 +82,49 @@[m [mstripe listen --forward-to localhost:3000/api/webhooks/stripe[m
 npm run stripe:test[m
 ```[m
 [m
[31m-### **2. Testar Checkout**[m
[32m+[m[32m### **2. Iniciar Servidor de Desenvolvimento**[m
 [m
[31m-1. **Inicie o servidor de desenvolvimento:**[m
[32m+[m[32m1. **Inicie o servidor backend:**[m
[32m+[m[32m   ```bash[m
[32m+[m[32m   npm run dev:server[m
[32m+[m[32m   ```[m
[32m+[m
[32m+[m[32m2. **Em outro terminal, inicie o frontend:**[m
    ```bash[m
    npm run dev[m
    ```[m
 [m
[31m-2. **Acesse o componente de teste:**[m
[32m+[m[32m3. **Acesse o componente de teste:**[m
    - Navegue para `/stripe-test` (se configurado)[m
    - Ou use o componente `StripeTest` diretamente[m
 [m
[31m-3. **Teste os produtos:**[m
[32m+[m[32m### **3. Testar Funcionalidades**[m
[32m+[m
[32m+[m[32m1. **Verificar Status:**[m
[32m+[m[32m   - ‚úÖ Stripe configurado[m
[32m+[m[32m   - ‚úÖ Servidor online[m
[32m+[m[32m   - ‚úÖ Webhook configurado (ap√≥s configurar)[m
[32m+[m
[32m+[m[32m2. **Testar Checkout:**[m
    - Clique em "Testar" nos planos dispon√≠veis[m
    - Verifique se o checkout do Stripe √© redirecionado[m
 [m
[31m-### **3. Testar Webhooks**[m
[32m+[m[32m3. **Testar Portal do Cliente:**[m
[32m+[m[32m   - Clique em "Testar Portal do Cliente"[m
[32m+[m[32m   - Verifique se o portal √© aberto[m
 [m
[31m-1. **Use o Stripe CLI para simular eventos:**[m
[31m-   ```bash[m
[31m-   stripe trigger checkout.session.completed[m
[31m-   stripe trigger customer.subscription.created[m
[31m-   ```[m
[32m+[m[32m4. **Testar Webhooks:**[m
[32m+[m[32m   - Use os bot√µes de teste de webhook[m
[32m+[m[32m   - Verifique os logs do servidor[m
[32m+[m
[32m+[m[32m### **4. Testar Webhooks com Stripe CLI**[m
 [m
[31m-2. **Verifique os logs do servidor para confirmar recebimento**[m
[32m+[m[32m```bash[m
[32m+[m[32m# Simular eventos espec√≠ficos[m
[32m+[m[32mstripe trigger checkout.session.completed[m
[32m+[m[32mstripe trigger customer.subscription.created[m
[32m+[m[32mstripe trigger invoice.payment_succeeded[m
[32m+[m[32m```[m
 [m
 ## üöÄ Deploy para Produ√ß√£o[m
 [m
[36m@@ -146,23 +165,29 @@[m [mnpm run stripe:test[m
    - ‚úÖ **RESOLVIDO** - As chaves j√° est√£o configuradas[m
    - Verifique se o arquivo `.env` existe e est√° correto[m
 [m
[31m-2. **Erro de webhook**[m
[32m+[m[32m2. **Servidor n√£o est√° rodando**[m
[32m+[m[32m   - Execute `npm run dev:server` em um terminal separado[m
[32m+[m[32m   - Verifique se a porta 3001 est√° dispon√≠vel[m
[32m+[m
[32m+[m[32m3. **Erro de webhook**[m
    - Verifique se o `STRIPE_WEBHOOK_SECRET` est√° correto[m
    - Confirme se o endpoint est√° acess√≠vel publicamente[m
[32m+[m[32m   - Reinicie o servidor ap√≥s configurar o webhook[m
 [m
[31m-3. **Produtos n√£o aparecem**[m
[32m+[m[32m4. **Produtos n√£o aparecem**[m
    - ‚úÖ **RESOLVIDO** - Os produtos j√° est√£o configurados com IDs reais[m
    - Execute `npm run stripe:sync` se necess√°rio[m
 [m
[31m-4. **Checkout n√£o funciona**[m
[32m+[m[32m5. **Checkout n√£o funciona**[m
    - ‚úÖ **RESOLVIDO** - As chaves est√£o configuradas[m
    - Verifique se as URLs de retorno est√£o corretas[m
[32m+[m[32m   - Confirme se o servidor est√° rodando[m
 [m
 ### **Logs e Debug**[m
 [m
 Para debug, verifique:[m
 - Console do navegador[m
[31m-- Logs do servidor[m
[32m+[m[32m- Logs do servidor (terminal onde roda `npm run dev:server`)[m
 - Stripe Dashboard ‚Üí Logs[m
 - Stripe CLI logs[m
 [m
[36m@@ -186,9 +211,39 @@[m [mSe encontrar problemas:[m
 - ‚úÖ **Fase 1: Configura√ß√£o Base** - COMPLETA[m
 - ‚úÖ **Chaves do Stripe** - CONFIGURADAS[m
 - ‚úÖ **Produtos e Pre√ßos** - SINCRONIZADOS[m
[31m-- üîÑ **Webhook** - PENDENTE (configurar no Dashboard)[m
[31m-- üöÄ **Fase 2: Checkout** - PRONTA PARA IMPLEMENTAR[m
[32m+[m[32m- ‚úÖ **Servidor Backend** - IMPLEMENTADO[m
[32m+[m[32m- ‚úÖ **Endpoints Stripe** - FUNCIONANDO[m
[32m+[m[32m- ‚úÖ **Servi√ßo de Webhook** - IMPLEMENTADO[m
[32m+[m[32m- ‚úÖ **Componente de Teste** - ATUALIZADO[m
[32m+[m[32m- üîÑ **Webhook no Stripe** - PENDENTE (configurar no Dashboard)[m
[32m+[m[32m- üöÄ **Fase 2: Checkout Funcional** - PRONTA PARA TESTAR[m
[32m+[m[32m- üöÄ **Fase 3: Webhooks Reais** - PRONTA PARA IMPLEMENTAR[m
[32m+[m
[32m+[m[32m## üîß **Funcionalidades Implementadas**[m
[32m+[m
[32m+[m[32m### **Backend (server.js)**[m
[32m+[m[32m- ‚úÖ Endpoint de checkout: `/api/stripe/create-checkout-session`[m
[32m+[m[32m- ‚úÖ Endpoint do portal: `/api/stripe/create-portal-session`[m
[32m+[m[32m- ‚úÖ Endpoint de webhook: `/api/webhooks/stripe`[m
[32m+[m[32m- ‚úÖ Endpoint de status: `/api/stripe/webhook-status`[m
[32m+[m[32m- ‚úÖ Endpoint de teste: `/api/stripe/test-webhook` (DEV)[m
[32m+[m
[32m+[m[32m### **Frontend (StripeTest.tsx)**[m
[32m+[m[32m- ‚úÖ Verifica√ß√£o de configura√ß√£o[m
[32m+[m[32m- ‚úÖ Status do servidor[m
[32m+[m[32m- ‚úÖ Status do webhook[m
[32m+[m[32m- ‚úÖ Teste de checkout[m
[32m+[m[32m- ‚úÖ Teste do portal[m
[32m+[m[32m- ‚úÖ Teste de webhooks[m
[32m+[m[32m- ‚úÖ Interface responsiva[m
[32m+[m
[32m+[m[32m### **Servi√ßos**[m
[32m+[m[32m- ‚úÖ `StripeService` - Integra√ß√£o com Stripe[m
[32m+[m[32m- ‚úÖ `WebhookService` - Processamento de webhooks[m
[32m+[m[32m- ‚úÖ `useStripeStore` - Gerenciamento de estado[m
 [m
 ---[m
 [m
 **‚ö†Ô∏è Importante**: Nunca commite chaves secretas no reposit√≥rio. Sempre use vari√°veis de ambiente.[m
[32m+[m
[32m+[m[32m**üöÄ Pr√≥ximo Passo**: Configurar o webhook no Stripe Dashboard para receber eventos reais![m
[1mdiff --git a/package.json b/package.json[m
[1mindex ba73a4b0..e0c3abb3 100644[m
[1m--- a/package.json[m
[1m+++ b/package.json[m
[36m@@ -13,7 +13,8 @@[m
     "preview": "vite preview",[m
     "stripe:sync": "tsx src/scripts/sync-stripe.ts",[m
     "stripe:test": "tsx src/scripts/sync-stripe.ts --test",[m
[31m-    "stripe:setup": "npm run stripe:sync"[m
[32m+[m[32m    "stripe:setup": "npm run stripe:sync",[m
[32m+[m[32m    "stripe:integration-test": "node test-stripe-integration.js"[m
   },[m
   "dependencies": {[m
     "@radix-ui/react-slot": "^1.2.3",[m
[1mdiff --git a/server.js b/server.js[m
[1mindex 05126cfe..70c3d116 100644[m
[1m--- a/server.js[m
[1m+++ b/server.js[m
[36m@@ -13,6 +13,9 @@[m [mconst PORT = 3001[m
 app.use(cors())[m
 app.use(express.json())[m
 [m
[32m+[m[32m// Middleware especial para webhooks do Stripe (raw body)[m
[32m+[m[32mapp.use('/api/webhooks/stripe', express.raw({ type: 'application/json' }))[m
[32m+[m
 // Importar os handlers da API[m
 import reportHandler from './api/report.js'[m
 import dashboardHandler from './api/dashboard.js'[m
[36m@@ -23,6 +26,14 @@[m [mimport settingsHandler from './api/settings.js'[m
 import dictionariesHandler from './api/dictionaries.js'[m
 import performanceHandler from './api/performance.js'[m
 [m
